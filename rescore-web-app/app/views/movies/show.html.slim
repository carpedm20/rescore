h1 =@movie.title

div style=('right: 0; top: 0; position: absolute')
  =image_tag(@movie.image_url)

strong Actions
ul
  li =link_to 'Edit', edit_movie_path(@movie)
  li =link_to 'Populate Source Links', populate_movie_source_links_path(@movie)
  li =link_to 'Populate Related People', populate_movie_related_people_path(@movie)
  -if @movie.status.nil? || @movie.status == ''
    li =link_to 'Collect Reviews', collect_movie_path(@movie)
  -else
    li
      ="Status: #{@movie.status} (mash refresh)"
      =link_to 'Restart', collect_movie_path(@movie)
  -if params[:all]
    li =link_to "Hide Review and Cast List", movie_path(@movie)
  -else
    li =link_to "Show all Reviews and Cast Members", movie_path(@movie, {all: true})
  li =button_to 'Delete Movie', @movie, {onclick: "return confirm('Sure?')", method: :delete}

strong Stats
ul
  li =@movie.rotten_tomatoes_id
  li ="This movie will be scanned #{@movie.page_depth} pages deep."
  li ="Review Count: #{@movie.reviews.size}"
  li ="Cast Count: #{@movie.related_people[:cast].size}" if @movie.related_people[:cast]

strong Source Links
ul
  li= link_to @movie.imdb_link, @movie.imdb_link
  li= link_to @movie.amazon_link, @movie.amazon_link
  li= link_to @movie.metacritic_link, @movie.metacritic_link
  li= link_to @movie.rotten_tomatoes_link, @movie.rotten_tomatoes_link

strong Reviews
=high_chart("ratings", @ratings_chart) unless @movie.reviews.empty?
=render 'review_list', reviews: @movie.reviews.take(@sample_size)
br

strong Related People
=render 'cast_list', cast: @movie.related_people[:cast].take(@sample_size) if @movie.related_people[:cast]

